{"version":3,"sources":["tiles-management-compiled.js"],"names":["define","$","Base","registry","Modal","Sortable","I18n","Pattern","extend","name","trigger","parser","defaults","init","_this","managerId","options","useModal","customEventPolyfill","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","initializeAddButton","button","url","$button","container","next","length","parent","append","hide","load","find","each","addTileModal","actionOptions","redirectOnResponse","on","slideDown","slideToggle","enableEditButtons","tile","$tile","deleteModal","templateOptions","classModal","onSuccess","self","response","state","xhr","form","reloadWindow","editModal","click","e","preventDefault","$element","currentTarget","get","attr","done","data","result","JSON","parse","console","error","$span","hasClass","removeClass","addClass","html","toggleClass","fail","mouseenter","show","mouseleave","enableSorting","absoluteUrl","baseUrl","sortable","selector","drop","$el","delta","tileIds","map","index","obj","tileid","stringify","_authenticator","message","enablePatterns","tags","className","split","cssClass","indexOf","pattern","substring","initPattern","TypeError","addLoader","portalUrl","loadManager","contentlUrl","tilesInfosUrl","ajax_load","remove","dispatchEvent","addButton","tiledata","$buttons","portal_url","$current_buttons","clone","setAttribute","token","tile_type","tile_hidden","prepend","target","href","err","trace","i18n","domain","loadCatalog","_","MessageFactory","require"],"mappings":";;AAAAA,OACE,0BADF,EAEE,CACE,QADF,EAEE,UAFF,EAGE,cAHF,EAIE,uBAJF,EAKE,0BALF,EAME,aANF,EAOE,gBAPF,CAFF,EAWE,UAASC,CAAT,EAAYC,IAAZ,EAAkBC,QAAlB,EAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,IAA7C,EAAmD;AACjD;;AACA,MAAIC,UAAUL,KAAKM,MAAL,CAAY;AACxBC,UAAM,kBADkB;AAExBC,aAAS,uBAFe;AAGxBC,YAAQ,QAHgB;AAIxBC,cAAU,EAJc;AAKxBC,UAAM,gBAAW;AACf,UAAMC,QAAQ,IAAd;AACA,UAAMC,YAAY,KAAKC,OAAL,CAAaD,SAA/B;AACA,UAAME,WAAW,KAAKD,OAAL,CAAaC,QAAb,KAA0B,OAA3C;;AAEA,UAAMC,sBAAsB,SAAtBA,mBAAsB,GAAM;AAChC,YAAI,OAAOC,OAAOC,WAAd,KAA8B,UAAlC,EAA8C,OAAO,KAAP;;AAE9C,iBAASA,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClCA,mBAASA,UAAU;AACjBC,qBAAS,KADQ;AAEjBC,wBAAY,KAFK;AAGjBC,oBAAQC;AAHS,WAAnB;AAKA,cAAIC,MAAMC,SAASC,WAAT,CAAqB,aAArB,CAAV;AACAF,cAAIG,eAAJ,CACET,KADF,EAEEC,OAAOC,OAFT,EAGED,OAAOE,UAHT,EAIEF,OAAOG,MAJT;AAMA,iBAAOE,GAAP;AACD;;AAEDP,oBAAYW,SAAZ,GAAwBZ,OAAOa,KAAP,CAAaD,SAArC;;AAEAZ,eAAOC,WAAP,GAAqBA,WAArB;AACD,OAtBD;;AAwBAF,4BA7Be,CA6BQ;;AAEvB,UAAMe,sBAAsB,SAAtBA,mBAAsB,CAASC,MAAT,EAAiBC,GAAjB,EAAsB;AAChD,YAAMC,UAAUnC,EAAEiC,MAAF,CAAhB;AACA,YAAIG,YAAYD,QAAQE,IAAR,CAAa,kBAAb,CAAhB;AACA,YAAID,UAAUE,MAAV,KAAqB,CAAzB,EAA4B;AAC1BH,kBAAQI,MAAR,GAAiBC,MAAjB,CAAwB,qCAAxB;AACAJ,sBAAYD,QAAQE,IAAR,CAAa,kBAAb,CAAZ;AACAD,oBAAUK,IAAV;AACAL,oBAAUM,IAAV,CAAeR,MAAM,uBAArB,EAA8C,YAAW;AACvD,gBAAIlB,QAAJ,EAAa;AACXoB,wBAAUO,IAAV,CAAe,mBAAf,EAAoCC,IAApC,CAAyC,YAAW;AAClD,oBAAMC,eAAe,IAAI1C,KAAJ,CAAUH,EAAE,IAAF,CAAV,EAAmB;AACtC8C,iCAAe;AACbC,wCAAoB;AADP;AADuB,iBAAnB,CAArB;AAKAF,6BAAaG,EAAb,CAAgB,cAAhB,EAAgC,YAAW;AACzChD,oBAAE,eAAF,EAAmBwC,MAAnB,CACE,kDACE1B,SADF,GAEE,MAHJ;AAKD,iBAND;AAOD,eAbD;AAcD;;AAEDd,cAAE,IAAF,EAAQiD,SAAR;AACD,WAnBD;AAoBD,SAxBD,MAwBO;AACLb,oBAAUc,WAAV;AACD;AACF,OA9BD;;AAgCA,UAAMC,oBAAoB,SAApBA,iBAAoB,CAASC,IAAT,EAAe;AACvC;AACA,YAAMC,QAAQrD,EAAEoD,IAAF,CAAd;AACA,YAAIpC,QAAJ,EAAa;AACXqC,gBAAMV,IAAN,CAAW,sCAAX,EAAmDC,IAAnD,CAAwD,YAAW;AACjE,gBAAMU,cAAc,IAAInD,KAAJ,CAAUH,EAAE,IAAF,CAAV,EAAmB;AACrCuD,+BAAiB;AACfC,4BAAY;AADG,eADoB;AAIrCV,6BAAe;AACbC,oCAAoB,KADP;AAEbU,2BAAW,mBAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;AACpD,sBAAIF,UAAU,SAAd,EAAyB;AACvBF,yBAAKjB,IAAL;AACAiB,yBAAKK,YAAL;AACD;AACF;AAPY;AAJsB,aAAnB,CAApB;AAcAT,wBAAYN,EAAZ,CAAe,cAAf,EAA+B,YAAW;AACxChD,gBAAE,kBAAF,EAAsBwC,MAAtB,CACE,kDACE1B,SADF,GAEE,MAHJ;AAKD,aAND;AAOD,WAtBD;;AAwBAuC,gBAAMV,IAAN,CAAW,oCAAX,EAAiDC,IAAjD,CAAsD,YAAW;AAC/D,gBAAMoB,YAAY,IAAI7D,KAAJ,CAAUH,EAAE,IAAF,CAAV,EAAmB;AACnCuD,+BAAiB;AACfC,4BAAY;AADG,eADkB;AAInCV,6BAAe;AACbC,oCAAoB;AADP;AAJoB,aAAnB,CAAlB;AAQD,WATD;AAUD;;AAEDM,cACGV,IADH,CACQ,0CADR,EAEGC,IAFH,CAEQ,YAAW;AACf5C,YAAE,IAAF,EAAQiE,KAAR,CAAc,UAASC,CAAT,EAAY;AACxBA,cAAEC,cAAF;AACA,gBAAIC,WAAWpE,EAAEkE,EAAEG,aAAJ,CAAf;AACArE,cAAEsE,GAAF,CAAMF,SAASG,IAAT,CAAc,MAAd,IAAwB,aAAxB,GAAwCzD,SAA9C,EACG0D,IADH,CACQ,UAASC,IAAT,EAAe;AACnB,kBAAIA,SAAShD,SAAb,EAAwB;AACtB,oBAAMiD,SAASC,KAAKC,KAAL,CAAWH,IAAX,CAAf;AACAI,wBAAQC,KAAR,CAAcJ,OAAOI,KAArB;AACA;AACD;AACD;AACA,kBAAIC,QAAQX,SAASzB,IAAT,CAAc,OAAd,CAAZ;AACA,kBAAIoC,MAAMC,QAAN,CAAe,WAAf,CAAJ,EAAgC;AAC9BD,sBAAME,WAAN,CAAkB,WAAlB,EAA+BC,QAA/B,CAAwC,+BAAxC;AACAH,sBAAMpC,IAAN,CAAW,OAAX,EAAoBwC,IAApB,CAAyB,MAAzB;AACD,eAHD,MAII;AACFJ,sBAAME,WAAN,CAAkB,+BAAlB,EAAmDC,QAAnD,CAA4D,WAA5D;AACAH,sBAAMpC,IAAN,CAAW,OAAX,EAAoBwC,IAApB,CAAyB,MAAzB;AACD;AACD;AACA9B,oBAAM+B,WAAN,CAAkB,YAAlB;AACD,aAnBH,EAoBGC,IApBH,CAoBQ,UAASP,KAAT,EAAgB;AACpBD,sBAAQC,KAAR,CAAcA,KAAd;AACD,aAtBH;AAuBD,WA1BD;AA2BD,SA9BH;;AAgCAzB,cACGiC,UADH,CACc,YAAW;AACrBtF,YAAE,IAAF,EAAQkF,QAAR,CAAiB,cAAjB;AACAlF,YAAE,IAAF,EACG2C,IADH,CACQ,kBADR,EAEG4C,IAFH;AAGD,SANH,EAOGC,UAPH,CAOc,YAAW;AACrBxF,YAAE,IAAF,EAAQiF,WAAR,CAAoB,cAApB;AACAjF,YAAE,IAAF,EACG2C,IADH,CACQ,kBADR,EAEGF,IAFH;AAGD,SAZH;AAaD,OArFD;;AAuFA,UAAMgD,gBAAgB,SAAhBA,aAAgB,CAASrD,SAAT,EAAoB;AACxC,YAAMsD,cACJ1F,EAAE,MAAF,EAAUyE,IAAV,GAAiBkB,OAAjB,IAA4B3F,EAAE,MAAF,EAAUuE,IAAV,CAAe,MAAf,CAD9B;AAEA,YAAMqB,WAAW,IAAIxF,QAAJ,CAAagC,UAAUO,IAAV,CAAe,YAAf,CAAb,EAA2C;AAC1DkD,oBAAU,iBADgD;AAE1DC,gBAAM,cAASC,GAAT,EAAcC,KAAd,EAAqB;AACzB,gBAAIA,UAAU,CAAd,EAAiB;AACf,kBAAMC,UAAUjG,EAAE,cAAF,EAAkBkG,GAAlB,CAAsB,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AACzD,uBAAOpG,EAAEoG,GAAF,EAAO3B,IAAP,GAAc4B,MAArB;AACD,eAFe,CAAhB;AAGA,kBAAIX,gBAAgBjE,SAApB,EAA+B;AAC7BzB,kBAAEsE,GAAF,CAAMoB,cAAc,gBAApB,EAAsC;AACpCO,2BAAStB,KAAK2B,SAAL,CAAeL,QAAQ3B,GAAR,EAAf,CAD2B;AAEpCxD,6BAAWA,SAFyB;AAGpCyF,kCAAgBR,IAAItB,IAAJ,CAAS,OAAT;AAHoB,iBAAtC,EAKGD,IALH,CAKQ,UAASC,IAAT,EAAe;AACnB,sBAAIA,QAAQA,SAAS,EAArB,EAAyB;AACvB,wBAAMC,SAASC,KAAKC,KAAL,CAAWH,IAAX,CAAf;AACAI,4BAAQC,KAAR,CAAcJ,OAAO8B,OAArB;AACD;AACF,iBAVH,EAWGnB,IAXH,CAWQ,UAASP,KAAT,EAAgB;AACpBD,0BAAQC,KAAR,CAAcA,KAAd;AACD,iBAbH;AAcD;AACF;AACF;AAxByD,SAA3C,CAAjB;AA0BD,OA7BD;;AA+BA,UAAM2B,iBAAiB,SAAjBA,cAAiB,CAASrE,SAAT,EAAoB;AACzC;AACA;AACA,YAAMsE,OAAOtE,UAAUO,IAAV,CAAe,iBAAf,CAAb;AACA,YAAI+D,KAAKpE,MAAL,KAAgB,CAApB,EAAuB;AACrB;AACD;;AAEDoE,aAAK9D,IAAL,CAAU,YAAW;AACnB,cAAM/B,QAAQ,IAAd;AACA,eAAK8F,SAAL,CAAeC,KAAf,CAAqB,GAArB,EAA0BV,GAA1B,CAA8B,UAASW,QAAT,EAAmB;AAC/C,gBAAIA,SAASC,OAAT,CAAiB,MAAjB,MAA6B,CAAC,CAAlC,EAAqC;AACnC,kBAAMC,UAAUF,SAASG,SAAT,CAAmB,CAAnB,CAAhB;AACA,kBAAI;AACF9G,yBAAS+G,WAAT,CAAqBF,OAArB,EAA8BlG,KAA9B,EAAqCgG,QAArC;AACD,eAFD,CAEE,OAAO3C,CAAP,EAAU;AACV,oBAAIA,aAAagD,SAAjB,EAA4B;AAC1B;AACA;AACD;AACF;AACF;AACF,WAZD;AAaD,SAfD;AAgBD,OAxBD;;AA0BA,UAAMC,YAAY,SAAZA,SAAY,CAAS/E,SAAT,EAAoB;AACpC,YAAMgF,YAAYpH,EAAE,MAAF,EAAUyE,IAAV,CAAe,WAAf,CAAlB;AACArC,kBAAU+C,IAAV,CAAe,0CAA0CiC,SAA1C,GAAsD,2EAArE;AACD,OAHD;;AAKA,UAAMC,cAAc,SAAdA,WAAc,CAASjF,SAAT,EAAoB2E,OAApB,EAA6B;AAC/C,YAAMO,cAActH,EAAE,MAAF,EAAUyE,IAAV,CAAe,SAAf,CAApB;AACA,YAAM8C,gBAAgBD,cAAc,mBAApC;AACAH,kBAAU/E,SAAV;AACApC,UAAEsE,GAAF,CAAMiD,aAAN,EAAqB,EAAEzG,WAAWA,SAAb,EAAwB0G,WAAW,IAAnC,EAArB,EACGhD,IADH,CACQ,UAASC,IAAT,EAAe;AACnB,cAAMU,OAAOnF,EAAEyE,IAAF,CAAb;AACA,cAAI,CAACU,KAAK7C,MAAV,EAAkB;AAChBF,sBAAUqF,MAAV;AACA;AACD;AACDrF,oBAAU+C,IAAV,CAAenF,EAAEyE,IAAF,CAAf;AACA;AACA,cAAIrD,QAAQ,IAAID,WAAJ,CAAgB,eAAhB,CAAZ;AACAiB,oBAAU,CAAV,EAAasF,aAAb,CAA2BtG,KAA3B;AACAqF,yBAAerE,SAAf;AACA,cAAMuF,YAAYvF,UAAUO,IAAV,CAAe,eAAf,CAAlB;AACA,cAAIgF,UAAUrF,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAMsF,WAAWjD,KAAKC,KAAL,CAAWxC,UAAUO,IAAV,CAAe,YAAf,EAA6B4B,IAA7B,CAAkC,gBAAlC,CAAX,CAAjB;AACA,gBAAMsD,WAAW7H,EAAE,yDACnB,sDADmB,GAEnB,iBAFmB,GAGnB,0DAHmB,GAInB,UAJmB,GAKnB,+DALmB,GAMnB,iBANmB,GAOnB,UAPmB,GAQnB,0DARmB,GASnB,iBATmB,GAUnB,6DAVmB,GAWnB,UAXmB,GAYnB,QAZiB,CAAjB;AAaA,gBAAM8H,aAAa9H,EAAE,MAAF,EAAUyE,IAAV,CAAe,SAAf,CAAnB;AACArC,sBAAUO,IAAV,CAAe,yBAAf,EAA0CC,IAA1C,CAA+C,YAAW;AACxD,kBAAImF,mBAAmBF,SAASG,KAAT,EAAvB;AACA,kBAAI3B,SAASrG,EAAE,IAAF,EAAQyE,IAAR,CAAa,QAAb,CAAb;AACA,mBAAKwD,YAAL,CAAkB,YAAlB,EAAgCL,SAASvB,MAAT,EAAiB6B,KAAjD;AACAH,+BAAiBpF,IAAjB,CAAsB,eAAtB,EAAuC4B,IAAvC,CAA4C,MAA5C,EAAoDuD,aAAa,eAAb,GAA+BF,SAASvB,MAAT,EAAiB8B,SAAhD,GAA4D,GAA5D,GAAkE9B,MAAtH;AACA0B,+BAAiBpF,IAAjB,CAAsB,qBAAtB,EAA6C4B,IAA7C,CAAkD,MAAlD,EAA0DuD,aAAa,4BAAb,GAA4CzB,MAA5C,GAAqD,kBAArD,GAA0EuB,SAASvB,MAAT,EAAiB6B,KAArJ;AACA,kBAAGN,SAASvB,MAAT,EAAiB+B,WAApB,EAAgC;AAC9BpI,kBAAE,IAAF,EAAQkF,QAAR,CAAiB,YAAjB;AACA6C,iCAAiBpF,IAAjB,CAAsB,qBAAtB,EAA6CH,MAA7C,CAAoDxC,EAAE,qFAAF,CAApD;AACD,eAHD,MAII;AACF+H,iCAAiBpF,IAAjB,CAAsB,qBAAtB,EAA6CH,MAA7C,CAAoDxC,EAAE,0GAAF,CAApD;AACD;AACD+H,+BAAiBpF,IAAjB,CAAsB,iBAAtB,EAAyC4B,IAAzC,CAA8C,MAA9C,EAAsDuD,aAAa,iBAAb,GAAiCF,SAASvB,MAAT,EAAiB8B,SAAlD,GAA8D,GAA9D,GAAoE9B,MAA1H;AACArG,gBAAE,IAAF,EAAQqI,OAAR,CAAgBN,gBAAhB;AACA3F,wBAAUO,IAAV,CAAe,kBAAf,EAAmCF,IAAnC;AACAU,gCAAkB,IAAlB;AACD,aAjBD;;AAmBAsC,0BAAcrD,SAAd;AACAuF,sBAAU/E,IAAV,CAAe,YAAW;AACxB5C,gBAAE,IAAF,EAAQiE,KAAR,CAAc,UAASC,CAAT,EAAY;AACxBA,kBAAEC,cAAF;AACAnC,oCAAoBhC,EAAE,IAAF,CAApB,EAA6BkE,EAAEoE,MAAF,CAASC,IAAtC;AACD,eAHD;AAID,aALD;AAMD;AACF,SAxDH,EAyDGlD,IAzDH,CAyDQ,UAASmD,GAAT,EAAc;AAClB3D,kBAAQ4D,KAAR,CAAcD,GAAd;AACA,cAAIE,OAAO,IAAIrI,IAAJ,EAAX;AACA,cAAMsI,SAAS,4BAAf;AACAD,eAAKE,WAAL,CAAiBD,MAAjB;AACA,cAAIE,IAAIH,KAAKI,cAAL,CAAoBH,MAApB,CAAR;AACAvG,oBAAU+C,IAAV,CACE,8BACE0D,EAAE,uBAAF,CADF,GAEE,MAHJ;AAKD,SApEH;AAqED,OAzED;;AA2EA,UAAI,CAAC/H,SAAL,EAAgB;AACdD,cAAMkF,GAAN,CAAUvD,MAAV,CACE,8EADF;AAGD,OAJD,MAIO;AACL6E,oBAAYxG,MAAMkF,GAAlB;AACD;AACF;AA3SuB,GAAZ,CAAd;;AA8SA,SAAOzF,OAAP;AACD,CA5TH;;AA+TAyI,QAAQ,CACN,0BADM,CAAR,EAEG,YAAY;AACb;AACD,CAJD;;AAMAhJ,OAAO,yDAAP,EAAkE,YAAU,CAAE,CAA9E;;AAGA","file":"tiles-management-compiled.js","sourcesContent":["define(\n  'tiles-management-pattern',\n  [\n    'jquery',\n    'pat-base',\n    'pat-registry',\n    'mockup-patterns-modal',\n    'mockup-patterns-sortable',\n    'mockup-i18n',\n    'babel-polyfill'\n  ],\n  function($, Base, registry, Modal, Sortable, I18n) {\n    'use strict';\n    var Pattern = Base.extend({\n      name: 'tiles-management',\n      trigger: '.pat-tiles-management',\n      parser: 'mockup',\n      defaults: {},\n      init: function() {\n        const _this = this;\n        const managerId = this.options.managerId;\n        const useModal = this.options.useModal !== \"false\";\n\n        const customEventPolyfill = () => {\n          if (typeof window.CustomEvent === 'function') return false;\n\n          function CustomEvent(event, params) {\n            params = params || {\n              bubbles: false,\n              cancelable: false,\n              detail: undefined\n            };\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(\n              event,\n              params.bubbles,\n              params.cancelable,\n              params.detail\n            );\n            return evt;\n          }\n\n          CustomEvent.prototype = window.Event.prototype;\n\n          window.CustomEvent = CustomEvent;\n        };\n\n        customEventPolyfill(); // for IE11 compatibility\n\n        const initializeAddButton = function(button, url) {\n          const $button = $(button);\n          var container = $button.next('.available-tiles');\n          if (container.length === 0) {\n            $button.parent().append('<div class=\"available-tiles\"></div>');\n            container = $button.next('.available-tiles');\n            container.hide();\n            container.load(url + ' #content .list-group', function() {\n              if (useModal){\n                container.find('a.list-group-item').each(function() {\n                  const addTileModal = new Modal($(this), {\n                    actionOptions: {\n                      redirectOnResponse: true\n                    }\n                  });\n                  addTileModal.on('after-render', function() {\n                    $('form#add_tile').append(\n                      '<input type=\"hidden\" name=\"managerId\" value=\"' +\n                        managerId +\n                        '\" />'\n                    );\n                  });\n                });\n              }\n\n              $(this).slideDown();\n            });\n          } else {\n            container.slideToggle();\n          }\n        };\n\n        const enableEditButtons = function(tile) {\n          //edit buttons modals\n          const $tile = $(tile);\n          if (useModal){\n            $tile.find('div.tileEditButtons a.tileDeleteLink').each(function() {\n              const deleteModal = new Modal($(this), {\n                templateOptions: {\n                  classModal: 'plone-modal-content delete-tile-modal'\n                },\n                actionOptions: {\n                  redirectOnResponse: false,\n                  onSuccess: function(self, response, state, xhr, form) {\n                    if (state === 'success') {\n                      self.hide();\n                      self.reloadWindow();\n                    }\n                  }\n                }\n              });\n              deleteModal.on('after-render', function() {\n                $('form#delete_tile').append(\n                  '<input type=\"hidden\" name=\"managerId\" value=\"' +\n                    managerId +\n                    '\" />'\n                );\n              });\n            });\n\n            $tile.find('div.tileEditButtons a.tileEditLink').each(function() {\n              const editModal = new Modal($(this), {\n                templateOptions: {\n                  classModal: 'plone-modal-content edit-tile-modal'\n                },\n                actionOptions: {\n                  redirectOnResponse: true\n                }\n              });\n            });\n          }\n\n          $tile\n            .find('div.tileEditButtons a.tileVisibilityLink')\n            .each(function() {\n              $(this).click(function(e) {\n                e.preventDefault();\n                let $element = $(e.currentTarget);\n                $.get($element.attr('href') + '&managerId=' + managerId)\n                  .done(function(data) {\n                    if (data !== undefined) {\n                      const result = JSON.parse(data);\n                      console.error(result.error);\n                      return;\n                    }\n                    // 1. cambia icona\n                    let $span = $element.find('>span');\n                    if ($span.hasClass('icon-view')){\n                      $span.removeClass('icon-view').addClass('glyphicon glyphicon-eye-close');\n                      $span.find('>span').html('Show');\n                    }\n                    else{\n                      $span.removeClass('glyphicon glyphicon-eye-close').addClass('icon-view');\n                      $span.find('>span').html('Hide');\n                    }\n                    // 2. cambia sfondo alla tile\n                    $tile.toggleClass('hiddenTile');\n                  })\n                  .fail(function(error) {\n                    console.error(error);\n                  });\n              });\n            });\n\n          $tile\n            .mouseenter(function() {\n              $(this).addClass('editableTile');\n              $(this)\n                .find('.tileEditButtons')\n                .show();\n            })\n            .mouseleave(function() {\n              $(this).removeClass('editableTile');\n              $(this)\n                .find('.tileEditButtons')\n                .hide();\n            });\n        };\n\n        const enableSorting = function(container) {\n          const absoluteUrl =\n            $('body').data().baseUrl || $('base').attr('href');\n          const sortable = new Sortable(container.find('.tilesList'), {\n            selector: 'div.tileWrapper',\n            drop: function($el, delta) {\n              if (delta !== 0) {\n                const tileIds = $('.tileWrapper').map(function(index, obj) {\n                  return $(obj).data().tileid;\n                });\n                if (absoluteUrl !== undefined) {\n                  $.get(absoluteUrl + '/reorder_tiles', {\n                    tileIds: JSON.stringify(tileIds.get()),\n                    managerId: managerId,\n                    _authenticator: $el.data('token')\n                  })\n                    .done(function(data) {\n                      if (data && data !== '') {\n                        const result = JSON.parse(data);\n                        console.error(result.message);\n                      }\n                    })\n                    .fail(function(error) {\n                      console.error(error);\n                    });\n                }\n              }\n            }\n          });\n        };\n\n        const enablePatterns = function(container) {\n          // we need to manually enable patterns of tiles loaded with ajax because\n          // sometimes these are loaded after pattern inits\n          const tags = container.find('[class*=\"pat-\"]');\n          if (tags.length === 0) {\n            return;\n          }\n\n          tags.each(function() {\n            const _this = this;\n            this.className.split(' ').map(function(cssClass) {\n              if (cssClass.indexOf('pat-') !== -1) {\n                const pattern = cssClass.substring(4);\n                try {\n                  registry.initPattern(pattern, _this, cssClass);\n                } catch (e) {\n                  if (e instanceof TypeError) {\n                    //pattern already registered\n                    return;\n                  }\n                }\n              }\n            });\n          });\n        };\n\n        const addLoader = function(container) {\n          const portalUrl = $('body').data('portalUrl');\n          container.html('<div class=\"loading-tiles\"><img src=\"' + portalUrl + '/++resource++redturtle.tiles.management/loader.svg\" alt=\"loading\"/></div>');\n        };\n\n        const loadManager = function(container, pattern) {\n          const contentlUrl = $('body').data('baseUrl');\n          const tilesInfosUrl = contentlUrl + '/tiles_management';\n          addLoader(container);\n          $.get(tilesInfosUrl, { managerId: managerId, ajax_load: true })\n            .done(function(data) {\n              const html = $(data);\n              if (!html.length) {\n                container.remove();\n                return\n              }\n              container.html($(data));\n              //throw custom event to notify when tiles are loaded\n              var event = new CustomEvent('rtTilesLoaded');\n              container[0].dispatchEvent(event);\n              enablePatterns(container);\n              const addButton = container.find('.add-tile-btn');\n              if (addButton.length > 0) {\n                const tiledata = JSON.parse(container.find('.tilesList').attr('data-tilesinfo'));\n                const $buttons = $('<div class=\"tileEditButtons\" style=\"z-index:100000\">' +\n                '    <a class=\"plone-btn plone-btn-info tileEditLink\"' +\n                '      href=\"#\">' +\n                '      <span class=\"icon-edit\" aria-hidden=\"true\"></span>' +\n                '    </a>' +\n                '    <a class=\"plone-btn plone-btn-warning tileVisibilityLink\"' +\n                '      href=\"#\">' +\n                '    </a>' +\n                '    <a class=\"plone-btn plone-btn-danger tileDeleteLink\"' +\n                '      href=\"#\">' +\n                '      <span class=\"icon-delete\" aria-hidden=\"true\">X</span>' +\n                '    </a>' +\n                '</div>');\n                const portal_url = $('body').data('baseUrl');\n                container.find('.tilesList .tileWrapper').each(function() {\n                  let $current_buttons = $buttons.clone();\n                  let tileid = $(this).data('tileid');\n                  this.setAttribute('data-token', tiledata[tileid].token);\n                  $current_buttons.find('.tileEditLink').attr('href', portal_url + '/@@edit-tile/' + tiledata[tileid].tile_type + '/' + tileid);\n                  $current_buttons.find('.tileVisibilityLink').attr('href', portal_url + '/@@show_hide_tiles?tileId=' + tileid + '&_authenticator=' + tiledata[tileid].token);\n                  if(tiledata[tileid].tile_hidden){\n                    $(this).addClass('hiddenTile');\n                    $current_buttons.find('.tileVisibilityLink').append($('<span class=\"icon-view\" aria-hidden=\"true\"><span class=\"sr-only\">Show</span></span>'));\n                  }\n                  else{\n                    $current_buttons.find('.tileVisibilityLink').append($('<span class=\"glyphicon glyphicon-eye-close\"  aria-hidden=\"true\"><span class=\"sr-only\">Hide</span></span>'));\n                  }\n                  $current_buttons.find('.tileDeleteLink').attr('href', portal_url + '/@@delete-tile/' + tiledata[tileid].tile_type + '/' + tileid);\n                  $(this).prepend($current_buttons);\n                  container.find('.tileEditButtons').hide();\n                  enableEditButtons(this);\n                });\n\n                enableSorting(container);\n                addButton.each(function() {\n                  $(this).click(function(e) {\n                    e.preventDefault();\n                    initializeAddButton($(this), e.target.href);\n                  });\n                });\n              }\n            })\n            .fail(function(err) {\n              console.trace(err);\n              var i18n = new I18n();\n              const domain = 'redturtle.tiles.management';\n              i18n.loadCatalog(domain);\n              var _ = i18n.MessageFactory(domain);\n              container.html(\n                '<p class=\"error-manager\">' +\n                  _('error_loading_manager') +\n                  '</p>'\n              );\n            });\n        };\n\n        if (!managerId) {\n          _this.$el.append(\n            '<span>to use tiles manager, you need to provide a managerId attribute</span>'\n          );\n        } else {\n          loadManager(_this.$el);\n        }\n      }\n    });\n\n    return Pattern;\n  }\n);\n\nrequire([\n  'tiles-management-pattern',\n], function () {\n  'use strict';\n});\n\ndefine(\"src/redturtle/tiles/management/browser/static/bundle.js\", function(){});\n\n\n//# sourceMappingURL=tiles-management-compiled.js.map"]}